{
    "__NOTICE__": "This file is generated by Shroud nowrite-version and is useful for debugging.",
    "library": {
        "classes": [
            {
                "as_struct": true,
                "cxx_header": [],
                "fmtdict": {
                    "C_header_filename": "wrapCstruct1.h",
                    "C_impl_filename": "wrapCstruct1.cpp",
                    "C_name_scope": "Cstruct1_",
                    "C_type_name": "CXX_cstruct1",
                    "F_capsule_data_type": "CXX_SHROUD_cstruct1_capsule",
                    "F_derived_name": "cstruct1",
                    "F_name_scope": "cstruct1_",
                    "PY_PyObject": "PY_Cstruct1",
                    "PY_PyTypeObject": "PY_Cstruct1_Type",
                    "PY_from_object_func": "PP_Cstruct1_from_Object",
                    "PY_struct_array_descr_create": "PY_Cstruct1_create_array_descr",
                    "PY_struct_array_descr_name": "Cstruct1_dtype",
                    "PY_struct_array_descr_variable": "PY_Cstruct1_array_descr",
                    "PY_to_object_func": "PP_Cstruct1_to_Object",
                    "PY_to_object_idtor_func": "PP_Cstruct1_to_Object_idtor",
                    "class_scope": "Cstruct1::",
                    "cxx_class": "Cstruct1",
                    "cxx_type": "Cstruct1",
                    "file_scope": "Cstruct1"
                },
                "name": "Cstruct1",
                "options": {
                    "PY_struct_arg": "numpy"
                },
                "scope": "Cstruct1::",
                "typemap_name": "Cstruct1",
                "variables": [
                    {
                        "ast": {
                            "declarator": {
                                "name": "ifield",
                                "pointer": []
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "fmtdict": {
                            "c_type": "int",
                            "cxx_type": "int",
                            "field_name": "ifield",
                            "variable_lower": "ifield",
                            "variable_name": "ifield",
                            "variable_upper": "IFIELD"
                        },
                        "name": "ifield",
                        "options": {}
                    },
                    {
                        "ast": {
                            "declarator": {
                                "name": "dfield",
                                "pointer": []
                            },
                            "specifier": [
                                "double"
                            ],
                            "typemap_name": "double"
                        },
                        "fmtdict": {
                            "c_type": "double",
                            "cxx_type": "double",
                            "field_name": "dfield",
                            "variable_lower": "dfield",
                            "variable_name": "dfield",
                            "variable_upper": "DFIELD"
                        },
                        "name": "dfield",
                        "options": {}
                    }
                ]
            },
            {
                "as_struct": true,
                "cxx_header": [],
                "fmtdict": {
                    "C_header_filename": "wrapCstruct1_cls.h",
                    "C_impl_filename": "wrapCstruct1_cls.cpp",
                    "C_name_scope": "Cstruct1_cls_",
                    "C_type_name": "CXX_cstruct1_cls",
                    "F_capsule_data_type": "CXX_SHROUD_cstruct1_cls_capsule",
                    "F_derived_name": "cstruct1_cls",
                    "F_name_scope": "cstruct1_cls_",
                    "PY_PyObject": "PY_Cstruct1_cls",
                    "PY_PyTypeObject": "PY_Cstruct1_cls_Type",
                    "PY_capsule_name": "PY_Cstruct1_cls_capsule_name",
                    "PY_from_object_func": "PP_Cstruct1_cls_from_Object",
                    "PY_struct_array_descr_create": "PY_Cstruct1_cls_create_array_descr",
                    "PY_struct_array_descr_name": "Cstruct1_cls_dtype",
                    "PY_struct_array_descr_variable": "PY_Cstruct1_cls_array_descr",
                    "PY_this_call": "self->obj->",
                    "PY_to_object_func": "PP_Cstruct1_cls_to_Object",
                    "PY_to_object_idtor_func": "PP_Cstruct1_cls_to_Object_idtor",
                    "PY_type_filename": "pyCstruct1_clstype.cpp",
                    "class_scope": "Cstruct1_cls::",
                    "cxx_class": "Cstruct1_cls",
                    "cxx_type": "Cstruct1_cls",
                    "file_scope": "Cstruct1_cls"
                },
                "functions": [
                    {
                        "_fmtargs": {
                            "dfield": {
                                "fmtpy": {
                                    "PY_member_object": "XXXPY_member_object",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_type": "double",
                                    "c_var": "dfield",
                                    "ctor_expr": "dfield",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&dfield",
                                    "cxx_type": "double",
                                    "cxx_var": "dfield",
                                    "data_var": "SHData_dfield",
                                    "field_name": "dfield",
                                    "numpy_type": "NPY_DOUBLE",
                                    "py_var": "SHPy_dfield",
                                    "size_var": "SHSize_dfield",
                                    "stmt0": "py_ctor_native_scalar_numpy",
                                    "stmt1": "py_ctor_native",
                                    "value_var": "SHValue_dfield"
                                }
                            },
                            "ifield": {
                                "fmtpy": {
                                    "PY_member_object": "XXXPY_member_object",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_type": "int",
                                    "c_var": "ifield",
                                    "ctor_expr": "ifield",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&ifield",
                                    "cxx_type": "int",
                                    "cxx_var": "ifield",
                                    "data_var": "SHData_ifield",
                                    "field_name": "ifield",
                                    "numpy_type": "NPY_INT",
                                    "py_var": "SHPy_ifield",
                                    "size_var": "SHSize_ifield",
                                    "stmt0": "py_ctor_native_scalar_numpy",
                                    "stmt1": "py_ctor_native",
                                    "value_var": "SHValue_ifield"
                                }
                            }
                        },
                        "_fmtresult": {
                            "fmtpy": {
                                "PYN_descr": "PY_Cstruct1_cls_array_descr",
                                "PY_build_format": "O",
                                "PY_to_object_idtor_func": "PP_Cstruct1_cls_to_Object_idtor",
                                "PyObject": "PY_Cstruct1_cls",
                                "PyTypeObject": "PY_Cstruct1_cls_Type",
                                "c_deref": "",
                                "c_var": "SHCXX_rv",
                                "ctor_expr": "SHCXX_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_nonconst_ptr": "&SHCXX_rv",
                                "cxx_type": "Cstruct1_cls",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": null,
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_default",
                                "stmt1": "py_default",
                                "value_var": "SHValue_rv",
                                "vargs": "SHCXX_rv"
                            }
                        },
                        "_generated": "struct_as_class_ctor",
                        "ast": {
                            "attrs": {
                                "_constructor": true,
                                "name": "Cstruct1_cls_ctor"
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "intent": "in"
                                    },
                                    "declarator": {
                                        "name": "ifield",
                                        "pointer": []
                                    },
                                    "metaattrs": {
                                        "struct_member": "ifield"
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                },
                                {
                                    "attrs": {
                                        "intent": "in"
                                    },
                                    "declarator": {
                                        "name": "dfield",
                                        "pointer": []
                                    },
                                    "metaattrs": {
                                        "struct_member": "dfield"
                                    },
                                    "specifier": [
                                        "double"
                                    ],
                                    "typemap_name": "double"
                                }
                            ],
                            "specifier": [
                                "Cstruct1_cls"
                            ],
                            "typemap_name": "Cstruct1_cls"
                        },
                        "decl": "Cstruct1_cls_ctor",
                        "declgen": "Cstruct1_cls(int ifield +intent(in), double dfield +intent(in)) +name(Cstruct1_cls_ctor)",
                        "fmtdict": {
                            "PY_name_impl": "PY_Cstruct1_cls_tp_init",
                            "PY_type_impl": "PY_Cstruct1_cls_tp_init",
                            "PY_type_method": "tp_init",
                            "function_name": "Cstruct1_cls_ctor",
                            "underscore_name": "cstruct1_cls_ctor"
                        },
                        "options": {
                            "wrap_c": false,
                            "wrap_fortran": false,
                            "wrap_lua": false
                        }
                    }
                ],
                "name": "Cstruct1_cls",
                "options": {
                    "PY_struct_arg": "class"
                },
                "scope": "Cstruct1_cls::",
                "typemap_name": "Cstruct1_cls",
                "variables": [
                    {
                        "ast": {
                            "declarator": {
                                "name": "ifield",
                                "pointer": []
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "fmtdict": {
                            "PY_getter": "PY_Cstruct1_cls_ifield_getter",
                            "PY_setter": "PY_Cstruct1_cls_ifield_setter",
                            "PY_struct_context": "self->obj->",
                            "c_type": "int",
                            "cxx_type": "int",
                            "field_name": "ifield",
                            "variable_lower": "ifield",
                            "variable_name": "ifield",
                            "variable_upper": "IFIELD"
                        },
                        "name": "ifield",
                        "options": {}
                    },
                    {
                        "ast": {
                            "declarator": {
                                "name": "dfield",
                                "pointer": []
                            },
                            "specifier": [
                                "double"
                            ],
                            "typemap_name": "double"
                        },
                        "fmtdict": {
                            "PY_getter": "PY_Cstruct1_cls_dfield_getter",
                            "PY_setter": "PY_Cstruct1_cls_dfield_setter",
                            "PY_struct_context": "self->obj->",
                            "c_type": "double",
                            "cxx_type": "double",
                            "field_name": "dfield",
                            "variable_lower": "dfield",
                            "variable_name": "dfield",
                            "variable_upper": "DFIELD"
                        },
                        "name": "dfield",
                        "options": {}
                    }
                ]
            }
        ],
        "copyright": [
            "Copyright (c) 2017-2020, Lawrence Livermore National Security, LLC and",
            "other Shroud Project Developers.",
            "See the top-level COPYRIGHT file for details.",
            "",
            "SPDX-License-Identifier: (BSD-3-Clause)",
            ""
        ],
        "cxx_header": [
            "cxxlibrary.hpp"
        ],
        "functions": [
            {
                "_fmtargs": {
                    "arg": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "arg",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "SHCXX_arg",
                            "cxx_type": "Cstruct1",
                            "cxx_var": "SHCXX_arg",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_STRUCT",
                            "stmt0": "c_struct_&_inout",
                            "stmt1": "c_struct"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_arg",
                            "c_var": "arg",
                            "f_intent": "INOUT",
                            "f_type": "type(cstruct1)",
                            "f_var": "arg",
                            "sh_type": "SH_TYPE_STRUCT",
                            "stmt0": "f_struct_&_inout",
                            "stmt1": "f_default",
                            "stmtc0": "c_struct_&_inout",
                            "stmtc1": "c_struct"
                        },
                        "fmtpy": {
                            "PYN_descr": "PY_Cstruct1_array_descr",
                            "PY_to_object_idtor_func": "PP_Cstruct1_to_Object_idtor",
                            "PyObject": "PY_Cstruct1",
                            "PyTypeObject": "PY_Cstruct1_Type",
                            "array_size": "1",
                            "c_const": "",
                            "c_deref": "",
                            "c_type": "CXX_cstruct1",
                            "c_var": "arg",
                            "ctor_expr": "arg",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&arg",
                            "cxx_type": "Cstruct1",
                            "cxx_var": "arg",
                            "data_var": "SHData_arg",
                            "numpy_type": null,
                            "py_var": "SHPy_arg",
                            "pytmp_var": "SHTPy_arg",
                            "size_var": "SHSize_arg",
                            "stmt0": "py_struct_&_inout_numpy",
                            "stmt1": "py_struct_&_inout_numpy",
                            "value_var": "SHValue_arg"
                        }
                    }
                },
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_get_value": "",
                        "c_type": "int",
                        "c_var": "SHC_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "&SHC_rv",
                        "cxx_type": "int",
                        "cxx_var": "SHC_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_INT",
                        "stmt0": "c_native_scalar_result",
                        "stmt1": "c_default"
                    },
                    "fmtf": {
                        "cxx_type": "int",
                        "f_type": "integer(C_INT)",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_INT",
                        "stmt0": "f_native_scalar_result",
                        "stmt1": "f_default",
                        "stmtc0": "c_native_scalar_result",
                        "stmtc1": "c_default"
                    },
                    "fmtpy": {
                        "c_deref": "",
                        "c_var": "SHCXX_rv",
                        "ctor_expr": "SHCXX_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "&SHCXX_rv",
                        "cxx_type": "int",
                        "cxx_var": "SHCXX_rv",
                        "data_var": "SHData_rv",
                        "numpy_type": "NPY_INT",
                        "py_var": "SHTPy_rv",
                        "size_var": "SHSize_rv",
                        "stmt0": "py_native_scalar_result",
                        "stmt1": "py_default",
                        "value_var": "SHValue_rv"
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "passStructByReference",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "inout"
                            },
                            "declarator": {
                                "name": "arg",
                                "pointer": [
                                    {
                                        "ptr": "&"
                                    }
                                ]
                            },
                            "specifier": [
                                "Cstruct1"
                            ],
                            "typemap_name": "Cstruct1"
                        }
                    ],
                    "specifier": [
                        "int"
                    ],
                    "typemap_name": "int"
                },
                "decl": "int passStructByReference(Cstruct1 &arg)",
                "declgen": "int passStructByReference(Cstruct1 & arg +intent(inout))",
                "doxygen": {
                    "description": "Argument is modified by library, defaults to intent(inout).\n"
                },
                "fmtdict": {
                    "C_call_list": "*SHCXX_arg",
                    "C_name": "CXX_pass_struct_by_reference",
                    "C_prototype": "CXX_cstruct1 * arg",
                    "C_return_type": "int",
                    "F_C_call": "c_pass_struct_by_reference",
                    "F_C_name": "pass_struct_by_reference",
                    "F_arg_c_call": "arg",
                    "F_arguments": "arg",
                    "F_name_function": "pass_struct_by_reference",
                    "F_name_generic": "pass_struct_by_reference",
                    "F_name_impl": "pass_struct_by_reference",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "PY_name_impl": "PY_passStructByReference",
                    "cxx_rv_decl": "int SHC_rv",
                    "function_name": "passStructByReference",
                    "underscore_name": "pass_struct_by_reference"
                },
                "options": {}
            },
            {
                "_fmtargs": {
                    "arg": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "const ",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "arg",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "const_cast<Cstruct1 *>\t(SHCXX_arg)",
                            "cxx_type": "Cstruct1",
                            "cxx_var": "SHCXX_arg",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_STRUCT",
                            "stmt0": "c_struct_&_in",
                            "stmt1": "c_struct"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_arg",
                            "c_var": "arg",
                            "f_intent": "IN",
                            "f_type": "type(cstruct1)",
                            "f_var": "arg",
                            "sh_type": "SH_TYPE_STRUCT",
                            "stmt0": "f_struct_&_in",
                            "stmt1": "f_default",
                            "stmtc0": "c_struct_&_in",
                            "stmtc1": "c_struct"
                        },
                        "fmtpy": {
                            "PYN_descr": "PY_Cstruct1_array_descr",
                            "PY_to_object_idtor_func": "PP_Cstruct1_to_Object_idtor",
                            "PyObject": "PY_Cstruct1",
                            "PyTypeObject": "PY_Cstruct1_Type",
                            "array_size": "1",
                            "c_const": "const ",
                            "c_deref": "",
                            "c_type": "CXX_cstruct1",
                            "c_var": "arg",
                            "ctor_expr": "arg",
                            "cxx_addr": "&",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "const_cast<Cstruct1 *>\t(&arg)",
                            "cxx_type": "Cstruct1",
                            "cxx_var": "arg",
                            "data_var": "SHData_arg",
                            "numpy_type": null,
                            "py_var": "SHPy_arg",
                            "pytmp_var": "SHTPy_arg",
                            "size_var": "SHSize_arg",
                            "stmt0": "py_struct_&_in_numpy",
                            "stmt1": "py_struct_&_in_numpy",
                            "value_var": "SHValue_arg"
                        }
                    }
                },
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_get_value": "",
                        "c_type": "int",
                        "c_var": "SHC_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "&SHC_rv",
                        "cxx_type": "int",
                        "cxx_var": "SHC_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_INT",
                        "stmt0": "c_native_scalar_result",
                        "stmt1": "c_default"
                    },
                    "fmtf": {
                        "cxx_type": "int",
                        "f_type": "integer(C_INT)",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_INT",
                        "stmt0": "f_native_scalar_result",
                        "stmt1": "f_default",
                        "stmtc0": "c_native_scalar_result",
                        "stmtc1": "c_default"
                    },
                    "fmtpy": {
                        "c_deref": "",
                        "c_var": "SHCXX_rv",
                        "ctor_expr": "SHCXX_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "&SHCXX_rv",
                        "cxx_type": "int",
                        "cxx_var": "SHCXX_rv",
                        "data_var": "SHData_rv",
                        "numpy_type": "NPY_INT",
                        "py_var": "SHTPy_rv",
                        "size_var": "SHSize_rv",
                        "stmt0": "py_native_scalar_result",
                        "stmt1": "py_default",
                        "value_var": "SHValue_rv"
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "passStructByReferenceIn",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "in"
                            },
                            "const": true,
                            "declarator": {
                                "name": "arg",
                                "pointer": [
                                    {
                                        "ptr": "&"
                                    }
                                ]
                            },
                            "specifier": [
                                "Cstruct1"
                            ],
                            "typemap_name": "Cstruct1"
                        }
                    ],
                    "specifier": [
                        "int"
                    ],
                    "typemap_name": "int"
                },
                "decl": "int passStructByReferenceIn(const Cstruct1 &arg)",
                "declgen": "int passStructByReferenceIn(const Cstruct1 & arg +intent(in))",
                "doxygen": {
                    "description": "const defaults to intent(in)\n"
                },
                "fmtdict": {
                    "C_call_list": "*SHCXX_arg",
                    "C_name": "CXX_pass_struct_by_reference_in",
                    "C_prototype": "const CXX_cstruct1 * arg",
                    "C_return_type": "int",
                    "F_C_call": "c_pass_struct_by_reference_in",
                    "F_C_name": "pass_struct_by_reference_in",
                    "F_arg_c_call": "arg",
                    "F_arguments": "arg",
                    "F_name_function": "pass_struct_by_reference_in",
                    "F_name_generic": "pass_struct_by_reference_in",
                    "F_name_impl": "pass_struct_by_reference_in",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "PY_name_impl": "PY_passStructByReferenceIn",
                    "cxx_rv_decl": "int SHC_rv",
                    "function_name": "passStructByReferenceIn",
                    "underscore_name": "pass_struct_by_reference_in"
                },
                "options": {}
            },
            {
                "_fmtargs": {
                    "arg": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "arg",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "SHCXX_arg",
                            "cxx_type": "Cstruct1",
                            "cxx_var": "SHCXX_arg",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_STRUCT",
                            "stmt0": "c_struct_&_inout",
                            "stmt1": "c_struct"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_arg",
                            "c_var": "arg",
                            "f_intent": "INOUT",
                            "f_type": "type(cstruct1)",
                            "f_var": "arg",
                            "sh_type": "SH_TYPE_STRUCT",
                            "stmt0": "f_struct_&_inout",
                            "stmt1": "f_default",
                            "stmtc0": "c_struct_&_inout",
                            "stmtc1": "c_struct"
                        },
                        "fmtpy": {
                            "PYN_descr": "PY_Cstruct1_array_descr",
                            "PY_to_object_idtor_func": "PP_Cstruct1_to_Object_idtor",
                            "PyObject": "PY_Cstruct1",
                            "PyTypeObject": "PY_Cstruct1_Type",
                            "array_size": "1",
                            "c_const": "",
                            "c_deref": "",
                            "c_type": "CXX_cstruct1",
                            "c_var": "arg",
                            "ctor_expr": "arg",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&arg",
                            "cxx_type": "Cstruct1",
                            "cxx_var": "arg",
                            "data_var": "SHData_arg",
                            "numpy_type": null,
                            "py_var": "SHPy_arg",
                            "pytmp_var": "SHTPy_arg",
                            "size_var": "SHSize_arg",
                            "stmt0": "py_struct_&_inout_numpy",
                            "stmt1": "py_struct_&_inout_numpy",
                            "value_var": "SHValue_arg"
                        }
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "passStructByReferenceInout",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "inout"
                            },
                            "declarator": {
                                "name": "arg",
                                "pointer": [
                                    {
                                        "ptr": "&"
                                    }
                                ]
                            },
                            "specifier": [
                                "Cstruct1"
                            ],
                            "typemap_name": "Cstruct1"
                        }
                    ],
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void passStructByReferenceInout(Cstruct1 &arg +intent(inout))",
                "declgen": "void passStructByReferenceInout(Cstruct1 & arg +intent(inout))",
                "fmtdict": {
                    "C_call_list": "*SHCXX_arg",
                    "C_name": "CXX_pass_struct_by_reference_inout",
                    "C_prototype": "CXX_cstruct1 * arg",
                    "C_return_type": "void",
                    "F_C_call": "c_pass_struct_by_reference_inout",
                    "F_C_name": "pass_struct_by_reference_inout",
                    "F_arg_c_call": "arg",
                    "F_arguments": "arg",
                    "F_name_function": "pass_struct_by_reference_inout",
                    "F_name_generic": "pass_struct_by_reference_inout",
                    "F_name_impl": "pass_struct_by_reference_inout",
                    "F_subprogram": "subroutine",
                    "PY_name_impl": "PY_passStructByReferenceInout",
                    "function_name": "passStructByReferenceInout",
                    "stmt0": "f_subroutine",
                    "stmt1": "f_default",
                    "stmtc0": "c",
                    "stmtc1": "c_default",
                    "underscore_name": "pass_struct_by_reference_inout"
                },
                "options": {}
            },
            {
                "_fmtargs": {
                    "arg": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "arg",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "SHCXX_arg",
                            "cxx_type": "Cstruct1",
                            "cxx_var": "SHCXX_arg",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_STRUCT",
                            "stmt0": "c_struct_&_out",
                            "stmt1": "c_struct"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_arg",
                            "c_var": "arg",
                            "f_intent": "OUT",
                            "f_type": "type(cstruct1)",
                            "f_var": "arg",
                            "sh_type": "SH_TYPE_STRUCT",
                            "stmt0": "f_struct_&_out",
                            "stmt1": "f_default",
                            "stmtc0": "c_struct_&_out",
                            "stmtc1": "c_struct"
                        },
                        "fmtpy": {
                            "PYN_descr": "PY_Cstruct1_array_descr",
                            "PY_to_object_idtor_func": "PP_Cstruct1_to_Object_idtor",
                            "PyObject": "PY_Cstruct1",
                            "PyTypeObject": "PY_Cstruct1_Type",
                            "array_size": "1",
                            "c_const": "",
                            "c_deref": "",
                            "c_type": "CXX_cstruct1",
                            "c_var": "arg",
                            "ctor_expr": "arg",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&arg",
                            "cxx_type": "Cstruct1",
                            "cxx_var": "arg",
                            "data_var": "SHData_arg",
                            "numpy_type": null,
                            "py_var": "SHPy_arg",
                            "size_var": "SHSize_arg",
                            "stmt0": "py_struct_&_out_numpy",
                            "stmt1": "py_struct_&_out_numpy",
                            "value_var": "SHValue_arg"
                        }
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "passStructByReferenceOut",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "out"
                            },
                            "declarator": {
                                "name": "arg",
                                "pointer": [
                                    {
                                        "ptr": "&"
                                    }
                                ]
                            },
                            "specifier": [
                                "Cstruct1"
                            ],
                            "typemap_name": "Cstruct1"
                        }
                    ],
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void passStructByReferenceOut(Cstruct1 &arg +intent(out))",
                "declgen": "void passStructByReferenceOut(Cstruct1 & arg +intent(out))",
                "fmtdict": {
                    "C_call_list": "*SHCXX_arg",
                    "C_name": "CXX_pass_struct_by_reference_out",
                    "C_prototype": "CXX_cstruct1 * arg",
                    "C_return_type": "void",
                    "F_C_call": "c_pass_struct_by_reference_out",
                    "F_C_name": "pass_struct_by_reference_out",
                    "F_arg_c_call": "arg",
                    "F_arguments": "arg",
                    "F_name_function": "pass_struct_by_reference_out",
                    "F_name_generic": "pass_struct_by_reference_out",
                    "F_name_impl": "pass_struct_by_reference_out",
                    "F_subprogram": "subroutine",
                    "PY_name_impl": "PY_passStructByReferenceOut",
                    "function_name": "passStructByReferenceOut",
                    "stmt0": "f_subroutine",
                    "stmt1": "f_default",
                    "stmtc0": "c",
                    "stmtc1": "c_default",
                    "underscore_name": "pass_struct_by_reference_out"
                },
                "options": {}
            },
            {
                "_fmtargs": {
                    "arg": {
                        "fmtpy": {
                            "PYN_descr": "PY_Cstruct1_cls_array_descr",
                            "PY_to_object_idtor_func": "PP_Cstruct1_cls_to_Object_idtor",
                            "PyObject": "PY_Cstruct1_cls",
                            "PyTypeObject": "PY_Cstruct1_cls_Type",
                            "array_size": "1",
                            "c_const": "",
                            "c_deref": "",
                            "c_type": "CXX_cstruct1_cls",
                            "c_var": "arg",
                            "ctor_expr": "arg",
                            "cxx_addr": "&",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "&arg",
                            "cxx_type": "Cstruct1_cls",
                            "cxx_var": "arg",
                            "data_var": "SHData_arg",
                            "numpy_type": null,
                            "py_object": "PY_Cstruct1_cls",
                            "py_var": "SHPy_arg",
                            "size_var": "SHSize_arg",
                            "stmt0": "py_struct_&_inout_class",
                            "stmt1": "py_struct_&_inout_class",
                            "value_var": "SHValue_arg"
                        }
                    }
                },
                "_fmtresult": {
                    "fmtpy": {
                        "c_deref": "",
                        "c_var": "SHCXX_rv",
                        "ctor_expr": "SHCXX_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "&SHCXX_rv",
                        "cxx_type": "int",
                        "cxx_var": "SHCXX_rv",
                        "data_var": "SHData_rv",
                        "numpy_type": "NPY_INT",
                        "py_var": "SHTPy_rv",
                        "size_var": "SHSize_rv",
                        "stmt0": "py_native_scalar_result",
                        "stmt1": "py_default",
                        "value_var": "SHValue_rv"
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "passStructByReferenceCls",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "inout"
                            },
                            "declarator": {
                                "name": "arg",
                                "pointer": [
                                    {
                                        "ptr": "&"
                                    }
                                ]
                            },
                            "specifier": [
                                "Cstruct1_cls"
                            ],
                            "typemap_name": "Cstruct1_cls"
                        }
                    ],
                    "specifier": [
                        "int"
                    ],
                    "typemap_name": "int"
                },
                "decl": "int passStructByReferenceCls(Cstruct1_cls &arg)",
                "declgen": "int passStructByReferenceCls(Cstruct1_cls & arg +intent(inout))",
                "fmtdict": {
                    "PY_name_impl": "PY_passStructByReferenceCls",
                    "function_name": "passStructByReferenceCls",
                    "underscore_name": "pass_struct_by_reference_cls"
                },
                "options": {}
            },
            {
                "_fmtargs": {
                    "arg": {
                        "fmtpy": {
                            "PYN_descr": "PY_Cstruct1_cls_array_descr",
                            "PY_to_object_idtor_func": "PP_Cstruct1_cls_to_Object_idtor",
                            "PyObject": "PY_Cstruct1_cls",
                            "PyTypeObject": "PY_Cstruct1_cls_Type",
                            "array_size": "1",
                            "c_const": "const ",
                            "c_deref": "",
                            "c_type": "CXX_cstruct1_cls",
                            "c_var": "arg",
                            "ctor_expr": "arg",
                            "cxx_addr": "&",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "const_cast<Cstruct1_cls *>\t(&arg)",
                            "cxx_type": "Cstruct1_cls",
                            "cxx_var": "arg",
                            "data_var": "SHData_arg",
                            "numpy_type": null,
                            "py_object": "PY_Cstruct1_cls",
                            "py_var": "SHPy_arg",
                            "size_var": "SHSize_arg",
                            "stmt0": "py_struct_&_in_class",
                            "stmt1": "py_struct_&_in_class",
                            "value_var": "SHValue_arg"
                        }
                    }
                },
                "_fmtresult": {
                    "fmtpy": {
                        "c_deref": "",
                        "c_var": "SHCXX_rv",
                        "ctor_expr": "SHCXX_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "&SHCXX_rv",
                        "cxx_type": "int",
                        "cxx_var": "SHCXX_rv",
                        "data_var": "SHData_rv",
                        "numpy_type": "NPY_INT",
                        "py_var": "SHTPy_rv",
                        "size_var": "SHSize_rv",
                        "stmt0": "py_native_scalar_result",
                        "stmt1": "py_default",
                        "value_var": "SHValue_rv"
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "passStructByReferenceInCls",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "in"
                            },
                            "const": true,
                            "declarator": {
                                "name": "arg",
                                "pointer": [
                                    {
                                        "ptr": "&"
                                    }
                                ]
                            },
                            "specifier": [
                                "Cstruct1_cls"
                            ],
                            "typemap_name": "Cstruct1_cls"
                        }
                    ],
                    "specifier": [
                        "int"
                    ],
                    "typemap_name": "int"
                },
                "decl": "int passStructByReferenceInCls(const Cstruct1_cls &arg)",
                "declgen": "int passStructByReferenceInCls(const Cstruct1_cls & arg +intent(in))",
                "doxygen": {
                    "description": "const defaults to intent(in)\n"
                },
                "fmtdict": {
                    "PY_name_impl": "PY_passStructByReferenceInCls",
                    "function_name": "passStructByReferenceInCls",
                    "underscore_name": "pass_struct_by_reference_in_cls"
                },
                "options": {}
            },
            {
                "_fmtargs": {
                    "arg": {
                        "fmtpy": {
                            "PYN_descr": "PY_Cstruct1_cls_array_descr",
                            "PY_to_object_idtor_func": "PP_Cstruct1_cls_to_Object_idtor",
                            "PyObject": "PY_Cstruct1_cls",
                            "PyTypeObject": "PY_Cstruct1_cls_Type",
                            "array_size": "1",
                            "c_const": "",
                            "c_deref": "",
                            "c_type": "CXX_cstruct1_cls",
                            "c_var": "arg",
                            "ctor_expr": "arg",
                            "cxx_addr": "&",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "&arg",
                            "cxx_type": "Cstruct1_cls",
                            "cxx_var": "arg",
                            "data_var": "SHData_arg",
                            "numpy_type": null,
                            "py_object": "PY_Cstruct1_cls",
                            "py_var": "SHPy_arg",
                            "size_var": "SHSize_arg",
                            "stmt0": "py_struct_&_inout_class",
                            "stmt1": "py_struct_&_inout_class",
                            "value_var": "SHValue_arg"
                        }
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "passStructByReferenceInoutCls",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "inout"
                            },
                            "declarator": {
                                "name": "arg",
                                "pointer": [
                                    {
                                        "ptr": "&"
                                    }
                                ]
                            },
                            "specifier": [
                                "Cstruct1_cls"
                            ],
                            "typemap_name": "Cstruct1_cls"
                        }
                    ],
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void passStructByReferenceInoutCls(Cstruct1_cls &arg +intent(inout))",
                "declgen": "void passStructByReferenceInoutCls(Cstruct1_cls & arg +intent(inout))",
                "fmtdict": {
                    "PY_name_impl": "PY_passStructByReferenceInoutCls",
                    "function_name": "passStructByReferenceInoutCls",
                    "underscore_name": "pass_struct_by_reference_inout_cls"
                },
                "options": {}
            },
            {
                "_fmtargs": {
                    "arg": {
                        "fmtpy": {
                            "PYN_descr": "PY_Cstruct1_cls_array_descr",
                            "PY_to_object_idtor_func": "PP_Cstruct1_cls_to_Object_idtor",
                            "PyObject": "PY_Cstruct1_cls",
                            "PyTypeObject": "PY_Cstruct1_cls_Type",
                            "array_size": "1",
                            "c_const": "",
                            "c_deref": "",
                            "c_type": "CXX_cstruct1_cls",
                            "c_var": "arg",
                            "ctor_expr": "arg",
                            "cxx_addr": "&",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "&arg",
                            "cxx_type": "Cstruct1_cls",
                            "cxx_var": "arg",
                            "data_var": "SHData_arg",
                            "numpy_type": null,
                            "py_var": "SHPy_arg",
                            "size_var": "SHSize_arg",
                            "stmt0": "py_struct_&_out_class",
                            "stmt1": "py_struct_&_out_class",
                            "value_var": "SHValue_arg"
                        }
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "passStructByReferenceOutCls",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "out"
                            },
                            "declarator": {
                                "name": "arg",
                                "pointer": [
                                    {
                                        "ptr": "&"
                                    }
                                ]
                            },
                            "specifier": [
                                "Cstruct1_cls"
                            ],
                            "typemap_name": "Cstruct1_cls"
                        }
                    ],
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void passStructByReferenceOutCls(Cstruct1_cls &arg +intent(out))",
                "declgen": "void passStructByReferenceOutCls(Cstruct1_cls & arg +intent(out))",
                "fmtdict": {
                    "PY_name_impl": "PY_passStructByReferenceOutCls",
                    "function_name": "passStructByReferenceOutCls",
                    "underscore_name": "pass_struct_by_reference_out_cls"
                },
                "options": {}
            },
            {
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_get_value": "",
                        "c_type": "bool",
                        "c_var": "SHC_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "&SHC_rv",
                        "cxx_type": "bool",
                        "cxx_var": "SHC_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_BOOL",
                        "stmt0": "c_bool_scalar_result",
                        "stmt1": "c_default"
                    },
                    "fmtf": {
                        "cxx_type": "bool",
                        "f_type": "logical",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_BOOL",
                        "stmt0": "f_bool_scalar_result",
                        "stmt1": "f_bool_result",
                        "stmtc0": "c_bool_scalar_result",
                        "stmtc1": "c_default"
                    }
                },
                "_generated": "has_default_arg",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "name": "defaultPtrIsNULL",
                        "pointer": []
                    },
                    "params": [],
                    "specifier": [
                        "bool"
                    ],
                    "typemap_name": "bool"
                },
                "decl": "bool defaultPtrIsNULL(double* data +intent(IN)+rank(1) = nullptr )",
                "declgen": "bool defaultPtrIsNULL()",
                "fmtdict": {
                    "C_name": "CXX_default_ptr_is_null_0",
                    "C_prototype": "void",
                    "C_return_type": "bool",
                    "F_C_call": "c_default_ptr_is_null_0",
                    "F_C_name": "c_default_ptr_is_null_0",
                    "F_arguments": "",
                    "F_name_function": "default_ptr_is_null_0",
                    "F_name_generic": "default_ptr_is_null",
                    "F_name_impl": "default_ptr_is_null_0",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "cxx_rv_decl": "bool SHC_rv",
                    "function_name": "defaultPtrIsNULL",
                    "function_suffix": "_0",
                    "underscore_name": "default_ptr_is_null"
                },
                "options": {
                    "wrap_c": true,
                    "wrap_fortran": true,
                    "wrap_lua": false,
                    "wrap_python": false
                }
            },
            {
                "_default_funcs": [
                    10
                ],
                "_fmtargs": {
                    "data": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "data",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "data",
                            "cxx_type": "double",
                            "cxx_var": "data",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_DOUBLE",
                            "stmt0": "c_native_*_in",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_data",
                            "c_var": "data",
                            "f_assumed_shape": "(:)",
                            "f_intent": "IN",
                            "f_type": "real(C_DOUBLE)",
                            "f_var": "data",
                            "rank": "1",
                            "sh_type": "SH_TYPE_DOUBLE",
                            "size": "size(data)",
                            "stmt0": "f_native_*_in",
                            "stmt1": "f_default",
                            "stmtc0": "c_native_*_in",
                            "stmtc1": "c_default"
                        },
                        "fmtpy": {
                            "array_size": "1",
                            "c_const": "",
                            "c_deref": "*",
                            "c_type": "double",
                            "c_var": "data",
                            "ctor_expr": "*data",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "data",
                            "cxx_type": "double",
                            "cxx_var": "data",
                            "data_var": "SHData_data",
                            "numpy_type": "NPY_DOUBLE",
                            "py_var": "SHPy_data",
                            "pytmp_var": "SHTPy_data",
                            "size_var": "SHSize_data",
                            "stmt0": "py_native_*_in_pointer_numpy",
                            "stmt1": "py_native_*_in_pointer_numpy",
                            "value_var": "SHValue_data"
                        }
                    }
                },
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_get_value": "",
                        "c_type": "bool",
                        "c_var": "SHC_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "&SHC_rv",
                        "cxx_type": "bool",
                        "cxx_var": "SHC_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_BOOL",
                        "stmt0": "c_bool_scalar_result",
                        "stmt1": "c_default"
                    },
                    "fmtf": {
                        "cxx_type": "bool",
                        "f_type": "logical",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_BOOL",
                        "stmt0": "f_bool_scalar_result",
                        "stmt1": "f_bool_result",
                        "stmtc0": "c_bool_scalar_result",
                        "stmtc1": "c_default"
                    },
                    "fmtpy": {
                        "PyTypeObject": "PyBool_Type",
                        "c_deref": "",
                        "c_var": "SHCXX_rv",
                        "ctor_expr": "SHCXX_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "&SHCXX_rv",
                        "cxx_type": "bool",
                        "cxx_var": "SHCXX_rv",
                        "data_var": "SHData_rv",
                        "numpy_type": "NPY_BOOL",
                        "py_var": "SHTPy_rv",
                        "size_var": "SHSize_rv",
                        "stmt0": "py_bool_scalar_result",
                        "stmt1": "py_bool_result",
                        "value_var": "SHValue_rv"
                    }
                },
                "_has_default_arg": true,
                "_nargs": [
                    0,
                    1
                ],
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "name": "defaultPtrIsNULL",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "in",
                                "rank": 1
                            },
                            "declarator": {
                                "name": "data",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "init": "nullptr",
                            "specifier": [
                                "double"
                            ],
                            "typemap_name": "double"
                        }
                    ],
                    "specifier": [
                        "bool"
                    ],
                    "typemap_name": "bool"
                },
                "decl": "bool defaultPtrIsNULL(double* data +intent(IN)+rank(1) = nullptr )",
                "declgen": "bool defaultPtrIsNULL(double * data=nullptr +intent(in)+rank(1))",
                "fmtdict": {
                    "C_call_list": "data",
                    "C_name": "CXX_default_ptr_is_null_1",
                    "C_prototype": "double * data",
                    "C_return_type": "bool",
                    "F_C_call": "c_default_ptr_is_null_1",
                    "F_C_name": "c_default_ptr_is_null_1",
                    "F_arg_c_call": "data",
                    "F_arguments": "data",
                    "F_name_function": "default_ptr_is_null_1",
                    "F_name_generic": "default_ptr_is_null",
                    "F_name_impl": "default_ptr_is_null_1",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "PY_cleanup_decref": "Py_XDECREF",
                    "PY_name_impl": "PY_defaultPtrIsNULL_1",
                    "cxx_rv_decl": "bool SHC_rv",
                    "function_name": "defaultPtrIsNULL",
                    "function_suffix": "_1",
                    "underscore_name": "default_ptr_is_null"
                },
                "options": {}
            },
            {
                "_fmtargs": {
                    "in1": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_var": "in1",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&in1",
                            "cxx_type": "int",
                            "cxx_var": "in1",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "c_native_scalar_in",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_in1",
                            "c_var": "in1",
                            "f_intent": "IN",
                            "f_type": "integer(C_INT)",
                            "f_var": "in1",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "f_native_scalar_in",
                            "stmt1": "f_default",
                            "stmtc0": "c_native_scalar_in",
                            "stmtc1": "c_default"
                        }
                    },
                    "out1": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "out1",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "out1",
                            "cxx_type": "int",
                            "cxx_var": "out1",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "c_native_*_out",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_out1",
                            "c_var": "out1",
                            "f_intent": "OUT",
                            "f_type": "integer(C_INT)",
                            "f_var": "out1",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "f_native_*_out",
                            "stmt1": "f_default",
                            "stmtc0": "c_native_*_out",
                            "stmtc1": "c_default"
                        }
                    },
                    "out2": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "out2",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "out2",
                            "cxx_type": "int",
                            "cxx_var": "out2",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "c_native_*_out",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_out2",
                            "c_var": "out2",
                            "f_intent": "OUT",
                            "f_type": "integer(C_INT)",
                            "f_var": "out2",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "f_native_*_out",
                            "stmt1": "f_default",
                            "stmtc0": "c_native_*_out",
                            "stmtc1": "c_default"
                        }
                    }
                },
                "_generated": "has_default_arg",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "name": "defaultArgsInOut",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "in",
                                "value": true
                            },
                            "declarator": {
                                "name": "in1",
                                "pointer": []
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        {
                            "attrs": {
                                "intent": "out"
                            },
                            "declarator": {
                                "name": "out1",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        {
                            "attrs": {
                                "intent": "out"
                            },
                            "declarator": {
                                "name": "out2",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        }
                    ],
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void defaultArgsInOut(int in1, int *out1+intent(out), int *out2+intent(out), bool flag = false)",
                "declgen": "void defaultArgsInOut(int in1 +intent(in)+value, int * out1 +intent(out), int * out2 +intent(out))",
                "fmtdict": {
                    "C_call_list": "in1,\t out1,\t out2",
                    "C_name": "CXX_default_args_in_out_0",
                    "C_prototype": "int in1,\t int * out1,\t int * out2",
                    "C_return_type": "void",
                    "F_C_call": "c_default_args_in_out_0",
                    "F_C_name": "c_default_args_in_out_0",
                    "F_arg_c_call": "in1,\t out1,\t out2",
                    "F_arguments": "in1,\t out1,\t out2",
                    "F_name_function": "default_args_in_out_0",
                    "F_name_generic": "default_args_in_out",
                    "F_name_impl": "default_args_in_out_0",
                    "F_subprogram": "subroutine",
                    "function_name": "defaultArgsInOut",
                    "function_suffix": "_0",
                    "stmt0": "f_subroutine",
                    "stmt1": "f_default",
                    "stmtc0": "c",
                    "stmtc1": "c_default",
                    "underscore_name": "default_args_in_out"
                },
                "options": {
                    "wrap_c": true,
                    "wrap_fortran": true,
                    "wrap_lua": false,
                    "wrap_python": false
                }
            },
            {
                "_default_funcs": [
                    11
                ],
                "_fmtargs": {
                    "flag": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_var": "flag",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&flag",
                            "cxx_type": "bool",
                            "cxx_var": "flag",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_BOOL",
                            "stmt0": "c_bool_scalar_in",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_flag",
                            "c_var": "SH_flag",
                            "f_intent": "IN",
                            "f_type": "logical",
                            "f_var": "flag",
                            "sh_type": "SH_TYPE_BOOL",
                            "stmt0": "f_bool_scalar_in",
                            "stmt1": "f_bool_in",
                            "stmtc0": "c_bool_scalar_in",
                            "stmtc1": "c_default"
                        },
                        "fmtpy": {
                            "PyTypeObject": "PyBool_Type",
                            "c_const": "",
                            "c_deref": "",
                            "c_type": "bool",
                            "c_var": "flag",
                            "ctor_expr": "flag",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&flag",
                            "cxx_type": "bool",
                            "cxx_var": "flag",
                            "data_var": "SHData_flag",
                            "numpy_type": "NPY_BOOL",
                            "py_object": "PyObject",
                            "py_var": "SHPy_flag",
                            "size_var": "SHSize_flag",
                            "stmt0": "py_bool_scalar_in",
                            "stmt1": "py_bool_in",
                            "value_var": "SHValue_flag"
                        }
                    },
                    "in1": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_var": "in1",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&in1",
                            "cxx_type": "int",
                            "cxx_var": "in1",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "c_native_scalar_in",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_in1",
                            "c_var": "in1",
                            "f_intent": "IN",
                            "f_type": "integer(C_INT)",
                            "f_var": "in1",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "f_native_scalar_in",
                            "stmt1": "f_default",
                            "stmtc0": "c_native_scalar_in",
                            "stmtc1": "c_default"
                        },
                        "fmtpy": {
                            "c_const": "",
                            "c_deref": "",
                            "c_type": "int",
                            "c_var": "in1",
                            "ctor_expr": "in1",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&in1",
                            "cxx_type": "int",
                            "cxx_var": "in1",
                            "data_var": "SHData_in1",
                            "numpy_type": "NPY_INT",
                            "py_var": "SHPy_in1",
                            "size_var": "SHSize_in1",
                            "stmt0": "py_native_scalar_in",
                            "stmt1": "py_default",
                            "value_var": "SHValue_in1"
                        }
                    },
                    "out1": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "out1",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "out1",
                            "cxx_type": "int",
                            "cxx_var": "out1",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "c_native_*_out",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_out1",
                            "c_var": "out1",
                            "f_intent": "OUT",
                            "f_type": "integer(C_INT)",
                            "f_var": "out1",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "f_native_*_out",
                            "stmt1": "f_default",
                            "stmtc0": "c_native_*_out",
                            "stmtc1": "c_default"
                        },
                        "fmtpy": {
                            "array_size": "1",
                            "c_const": "",
                            "c_deref": "*",
                            "c_type": "int",
                            "c_var": "out1",
                            "ctor_expr": "out1",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "out1",
                            "cxx_type": "int",
                            "cxx_var": "out1",
                            "data_var": "SHData_out1",
                            "numpy_type": "NPY_INT",
                            "py_var": "SHPy_out1",
                            "size_var": "SHSize_out1",
                            "stmt0": "py_native_*_out",
                            "stmt1": "py_native_*_out",
                            "value_var": "SHValue_out1"
                        }
                    },
                    "out2": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "out2",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "out2",
                            "cxx_type": "int",
                            "cxx_var": "out2",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "c_native_*_out",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_out2",
                            "c_var": "out2",
                            "f_intent": "OUT",
                            "f_type": "integer(C_INT)",
                            "f_var": "out2",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "f_native_*_out",
                            "stmt1": "f_default",
                            "stmtc0": "c_native_*_out",
                            "stmtc1": "c_default"
                        },
                        "fmtpy": {
                            "array_size": "1",
                            "c_const": "",
                            "c_deref": "*",
                            "c_type": "int",
                            "c_var": "out2",
                            "ctor_expr": "out2",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "out2",
                            "cxx_type": "int",
                            "cxx_var": "out2",
                            "data_var": "SHData_out2",
                            "numpy_type": "NPY_INT",
                            "py_var": "SHPy_out2",
                            "size_var": "SHSize_out2",
                            "stmt0": "py_native_*_out",
                            "stmt1": "py_native_*_out",
                            "value_var": "SHValue_out2"
                        }
                    }
                },
                "_has_default_arg": true,
                "_nargs": [
                    3,
                    4
                ],
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "name": "defaultArgsInOut",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "in",
                                "value": true
                            },
                            "declarator": {
                                "name": "in1",
                                "pointer": []
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        {
                            "attrs": {
                                "intent": "out"
                            },
                            "declarator": {
                                "name": "out1",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        {
                            "attrs": {
                                "intent": "out"
                            },
                            "declarator": {
                                "name": "out2",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        {
                            "attrs": {
                                "intent": "in",
                                "value": true
                            },
                            "declarator": {
                                "name": "flag",
                                "pointer": []
                            },
                            "init": "false",
                            "specifier": [
                                "bool"
                            ],
                            "typemap_name": "bool"
                        }
                    ],
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void defaultArgsInOut(int in1, int *out1+intent(out), int *out2+intent(out), bool flag = false)",
                "declgen": "void defaultArgsInOut(int in1 +intent(in)+value, int * out1 +intent(out), int * out2 +intent(out), bool flag=false +intent(in)+value)",
                "fmtdict": {
                    "C_call_list": "in1,\t out1,\t out2,\t flag",
                    "C_name": "CXX_default_args_in_out_1",
                    "C_prototype": "int in1,\t int * out1,\t int * out2,\t bool flag",
                    "C_return_type": "void",
                    "F_C_call": "c_default_args_in_out_1",
                    "F_C_name": "c_default_args_in_out_1",
                    "F_arg_c_call": "in1,\t out1,\t out2,\t SH_flag",
                    "F_arguments": "in1,\t out1,\t out2,\t flag",
                    "F_name_function": "default_args_in_out_1",
                    "F_name_generic": "default_args_in_out",
                    "F_name_impl": "default_args_in_out_1",
                    "F_subprogram": "subroutine",
                    "PY_cleanup_decref": "Py_XDECREF",
                    "PY_name_impl": "PY_defaultArgsInOut_1",
                    "function_name": "defaultArgsInOut",
                    "function_suffix": "_1",
                    "stmt0": "f_subroutine",
                    "stmt1": "f_default",
                    "stmtc0": "c",
                    "stmtc1": "c_default",
                    "underscore_name": "default_args_in_out"
                },
                "options": {}
            }
        ],
        "language": "cxx",
        "scope_file": [
            "cxxlibrary"
        ]
    }
}