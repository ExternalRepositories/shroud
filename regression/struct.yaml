copyright:
- Copyright (c) 2017-2020, Lawrence Livermore National Security, LLC and
- other Shroud Project Developers.
- See the top-level COPYRIGHT file for details.
-
- "SPDX-License-Identifier: (BSD-3-Clause)"
-

# Wrap a C library with structs

# Several tests have a 'char *outbuf+intent(out)' argument
# which will force a C bufferify wrapper to be created.
# The size of this buffer is controlled by lenoutbuf.
# This feature is helpful for the C tests since a C wrapper is not required
# for each function since we do not need to deal with name mangling
# like in C++.

library: struct
cxx_header: struct.h

language: c

options:
  debug: True
  wrap_python: True

format:
  # Avoid conflict with builtin module
  PY_module_name: cstruct

declarations:

- decl: struct Cstruct1 {
          int ifield;
          double dfield;
        };
  options:
    literalinclude: True

- decl: int passStructByValue(Cstruct1 arg)
  options:
    literalinclude: True

- decl: int passStruct1(Cstruct1 *arg)
  options:
    literalinclude: True

- decl: int passStruct2(Cstruct1 *s1, char *outbuf+intent(out)+charlen(LENOUTBUF))
  doxygen:
    description: |
      Pass name argument which will build a bufferify function.

- decl: int acceptStructInPtr(Cstruct1 *arg+intent(in))
  options:
    wrap_python: False

- decl: void acceptStructOutPtr(Cstruct1 *arg +intent(out), int i, double d)
  doxygen:
    description: |
      Pass name argument which will build a bufferify function.

- decl: void acceptStructInOutPtr(Cstruct1 *arg +intent(inout))

######################################################################
- decl: Cstruct1 returnStructByValue(int i, double d);
- decl: const Cstruct1 returnConstStructByValue(int i, double d);

- decl: Cstruct1 *returnStructPtr1(int i, double d)
  doxygen:
    brief: Return a pointer to a struct
    description: |
      Does not generate a bufferify C wrapper.

- decl: Cstruct1 *returnStructPtr2(int i, double d,
            char *outbuf+intent(out)+charlen(LENOUTBUF))
  doxygen:
    brief: Return a pointer to a struct
    description: |
      Generates a bufferify C wrapper function.

######################################################################
splicer_code:
  f:
    module_top:
    -  "integer, parameter :: MAXNAME = 20"
